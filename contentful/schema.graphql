directive @contentSourceMaps on QUERY

directive @delegatedResourceLink(contentTypeId: String, field: JSON) on FIELD_DEFINITION | OBJECT

directive @enumMapper(value: JSON) on ENUM_VALUE

directive @featureFlag(featureName: String) on FIELD

directive @fieldResolver(data: JSON, kind: String) on FIELD_DEFINITION

directive @typeIdentifier(contentTypeId: String) on OBJECT

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  headerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HeaderCollection
  seoMetadataCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SeoMetadataCollection
  socialMediaLinkCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SocialMediaLinkCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
  concepts: [TaxonomyConcept]!
}

"""
Represents a taxonomy concept entity for finding and organizing content easily.
        Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-concepts
"""
type TaxonomyConcept {
  id: String
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
  concepts_exists: Boolean
  concepts: ContentfulMetadataConceptsFilter
}

input ContentfulMetadataConceptsFilter {
  id_contains_all: [String]
  id_contains_some: [String]
  id_contains_none: [String]
  descendants: ContentfulMetadataConceptsDescendantsFilter
}

input ContentfulMetadataConceptsDescendantsFilter {
  id_contains_all: [String]
  id_contains_some: [String]
  id_contains_none: [String]
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
      Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/83g0mnvupozx/content_types/footer)
"""
type Footer implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): FooterLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type FooterCollection {
  items: [Footer]!
  limit: Int!
  skip: Int!
  total: Int!
}

input FooterFilter {
  AND: [FooterFilter]
  OR: [FooterFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type FooterLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [FooterLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum FooterLinkingCollectionsPageCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum FooterOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/83g0mnvupozx/content_types/header)
"""
type Header implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): HeaderLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type HeaderCollection {
  items: [Header]!
  limit: Int!
  skip: Int!
  total: Int!
}

input HeaderFilter {
  AND: [HeaderFilter]
  OR: [HeaderFilter]
  contentfulMetadata: ContentfulMetadataFilter
  image_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type HeaderLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [HeaderLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum HeaderLinkingCollectionsPageCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum HeaderOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  """AVIF image format."""
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
[See type definition](https://app.contentful.com/spaces/83g0mnvupozx/content_types/market)
"""
type Market implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): MarketLinkingCollections
  name(locale: String): String
  slug(locale: String): String
  socialMediaLinksCollection(limit: Int = 100, locale: String, order: [MarketSocialMediaLinksCollectionOrder], preview: Boolean, skip: Int = 0, where: SocialMediaLinkFilter): MarketSocialMediaLinksCollection
  sys: Sys!
}

type MarketCollection {
  items: [Market]!
  limit: Int!
  skip: Int!
  total: Int!
}

input MarketFilter {
  AND: [MarketFilter]
  OR: [MarketFilter]
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  socialMediaLinks: cfSocialMediaLinkNestedFilter
  socialMediaLinksCollection_exists: Boolean
  sys: SysFilter
}

type MarketLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [MarketLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
  siteSettingsCollection(limit: Int = 100, locale: String, order: [MarketLinkingCollectionsSiteSettingsCollectionOrder], preview: Boolean, skip: Int = 0): SiteSettingsCollection
}

enum MarketLinkingCollectionsPageCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum MarketLinkingCollectionsSiteSettingsCollectionOrder {
  facebookPixelId_ASC
  facebookPixelId_DESC
  googleAnalyticsId_ASC
  googleAnalyticsId_DESC
  googleTagManagerId_ASC
  googleTagManagerId_DESC
  siteName_ASC
  siteName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum MarketOrder {
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type MarketSocialMediaLinksCollection {
  items: [SocialMediaLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum MarketSocialMediaLinksCollectionOrder {
  platformName_ASC
  platformName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/83g0mnvupozx/content_types/page)
"""
type Page implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  footer(locale: String, preview: Boolean, where: FooterFilter): Footer
  header(locale: String, preview: Boolean, where: HeaderFilter): Header
  linkedFrom(allowedLocales: [String]): PageLinkingCollections
  market(locale: String, preview: Boolean, where: MarketFilter): Market
  modulesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageModulesCollection
  pagesCollection(limit: Int = 100, locale: String, order: [PagePagesCollectionOrder], preview: Boolean, skip: Int = 0, where: PageFilter): PagePagesCollection
  seoMetadata(locale: String, preview: Boolean, where: SeoMetadataFilter): SeoMetadata
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type PageCollection {
  items: [Page]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageFilter {
  AND: [PageFilter]
  OR: [PageFilter]
  contentfulMetadata: ContentfulMetadataFilter
  footer: cfFooterNestedFilter
  footer_exists: Boolean
  header: cfHeaderNestedFilter
  header_exists: Boolean
  market: cfMarketNestedFilter
  market_exists: Boolean
  modulesCollection_exists: Boolean
  pages: cfPageNestedFilter
  pagesCollection_exists: Boolean
  seoMetadata: cfSeoMetadataNestedFilter
  seoMetadata_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [PageLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum PageLinkingCollectionsPageCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PageModulesCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PagePagesCollection {
  items: [Page]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PagePagesCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  _nodes(ids: [ID!]!, locale: String, preview: Boolean): [_Node]!
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  footer(id: String!, locale: String, preview: Boolean): Footer
  footerCollection(limit: Int = 100, locale: String, order: [FooterOrder], preview: Boolean, skip: Int = 0, where: FooterFilter): FooterCollection
  header(id: String!, locale: String, preview: Boolean): Header
  headerCollection(limit: Int = 100, locale: String, order: [HeaderOrder], preview: Boolean, skip: Int = 0, where: HeaderFilter): HeaderCollection
  market(id: String!, locale: String, preview: Boolean): Market
  marketCollection(limit: Int = 100, locale: String, order: [MarketOrder], preview: Boolean, skip: Int = 0, where: MarketFilter): MarketCollection
  page(id: String!, locale: String, preview: Boolean): Page
  pageCollection(limit: Int = 100, locale: String, order: [PageOrder], preview: Boolean, skip: Int = 0, where: PageFilter): PageCollection
  script(id: String!, locale: String, preview: Boolean): Script
  scriptCollection(limit: Int = 100, locale: String, order: [ScriptOrder], preview: Boolean, skip: Int = 0, where: ScriptFilter): ScriptCollection
  seoMetadata(id: String!, locale: String, preview: Boolean): SeoMetadata
  seoMetadataCollection(limit: Int = 100, locale: String, order: [SeoMetadataOrder], preview: Boolean, skip: Int = 0, where: SeoMetadataFilter): SeoMetadataCollection
  siteSettings(id: String!, locale: String, preview: Boolean): SiteSettings
  siteSettingsCollection(limit: Int = 100, locale: String, order: [SiteSettingsOrder], preview: Boolean, skip: Int = 0, where: SiteSettingsFilter): SiteSettingsCollection
  socialMediaLink(id: String!, locale: String, preview: Boolean): SocialMediaLink
  socialMediaLinkCollection(limit: Int = 100, locale: String, order: [SocialMediaLinkOrder], preview: Boolean, skip: Int = 0, where: SocialMediaLinkFilter): SocialMediaLinkCollection
  urlRedirect(id: String!, locale: String, preview: Boolean): UrlRedirect
  urlRedirectCollection(limit: Int = 100, locale: String, order: [UrlRedirectOrder], preview: Boolean, skip: Int = 0, where: UrlRedirectFilter): UrlRedirectCollection
}

"""
[See type definition](https://app.contentful.com/spaces/83g0mnvupozx/content_types/script)
"""
type Script implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  crossOrigin(locale: String): String
  executionStrategy(locale: String): String
  id(locale: String): String
  inlineScript(locale: String): String
  linkedFrom(allowedLocales: [String]): ScriptLinkingCollections
  source(locale: String): String
  strategy(locale: String): String
  sys: Sys!
}

type ScriptCollection {
  items: [Script]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ScriptFilter {
  AND: [ScriptFilter]
  OR: [ScriptFilter]
  contentfulMetadata: ContentfulMetadataFilter
  crossOrigin: String
  crossOrigin_contains: String
  crossOrigin_exists: Boolean
  crossOrigin_in: [String]
  crossOrigin_not: String
  crossOrigin_not_contains: String
  crossOrigin_not_in: [String]
  executionStrategy: String
  executionStrategy_contains: String
  executionStrategy_exists: Boolean
  executionStrategy_in: [String]
  executionStrategy_not: String
  executionStrategy_not_contains: String
  executionStrategy_not_in: [String]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  inlineScript: String
  inlineScript_contains: String
  inlineScript_exists: Boolean
  inlineScript_in: [String]
  inlineScript_not: String
  inlineScript_not_contains: String
  inlineScript_not_in: [String]
  source: String
  source_contains: String
  source_exists: Boolean
  source_in: [String]
  source_not: String
  source_not_contains: String
  source_not_in: [String]
  strategy: String
  strategy_contains: String
  strategy_exists: Boolean
  strategy_in: [String]
  strategy_not: String
  strategy_not_contains: String
  strategy_not_in: [String]
  sys: SysFilter
}

type ScriptLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  siteSettingsCollection(limit: Int = 100, locale: String, order: [ScriptLinkingCollectionsSiteSettingsCollectionOrder], preview: Boolean, skip: Int = 0): SiteSettingsCollection
}

enum ScriptLinkingCollectionsSiteSettingsCollectionOrder {
  facebookPixelId_ASC
  facebookPixelId_DESC
  googleAnalyticsId_ASC
  googleAnalyticsId_DESC
  googleTagManagerId_ASC
  googleTagManagerId_DESC
  siteName_ASC
  siteName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ScriptOrder {
  crossOrigin_ASC
  crossOrigin_DESC
  executionStrategy_ASC
  executionStrategy_DESC
  id_ASC
  id_DESC
  source_ASC
  source_DESC
  strategy_ASC
  strategy_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/83g0mnvupozx/content_types/seoMetadata)
"""
type SeoMetadata implements Entry & _Node {
  _id: ID!
  canonicalUrl(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  featuredImage(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): SeoMetadataLinkingCollections
  noFollow(locale: String): Boolean
  noIndex(locale: String): Boolean
  pageTitle(locale: String): String
  seoDescription(locale: String): String
  seoTitle(locale: String): String
  sys: Sys!
}

type SeoMetadataCollection {
  items: [SeoMetadata]!
  limit: Int!
  skip: Int!
  total: Int!
}

input SeoMetadataFilter {
  AND: [SeoMetadataFilter]
  OR: [SeoMetadataFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  featuredImage_exists: Boolean
  noFollow: Boolean
  noFollow_exists: Boolean
  noFollow_not: Boolean
  noIndex: Boolean
  noIndex_exists: Boolean
  noIndex_not: Boolean
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  seoDescription: String
  seoDescription_contains: String
  seoDescription_exists: Boolean
  seoDescription_in: [String]
  seoDescription_not: String
  seoDescription_not_contains: String
  seoDescription_not_in: [String]
  seoTitle: String
  seoTitle_contains: String
  seoTitle_exists: Boolean
  seoTitle_in: [String]
  seoTitle_not: String
  seoTitle_not_contains: String
  seoTitle_not_in: [String]
  sys: SysFilter
}

type SeoMetadataLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [SeoMetadataLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum SeoMetadataLinkingCollectionsPageCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum SeoMetadataOrder {
  canonicalUrl_ASC
  canonicalUrl_DESC
  noFollow_ASC
  noFollow_DESC
  noIndex_ASC
  noIndex_DESC
  pageTitle_ASC
  pageTitle_DESC
  seoDescription_ASC
  seoDescription_DESC
  seoTitle_ASC
  seoTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/83g0mnvupozx/content_types/siteSettings)
"""
type SiteSettings implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  facebookPixelId(locale: String): String
  googleAnalyticsId(locale: String): String
  googleTagManagerId(locale: String): String
  linkedFrom(allowedLocales: [String]): SiteSettingsLinkingCollections
  market(locale: String, preview: Boolean, where: MarketFilter): Market
  scriptsCollection(limit: Int = 100, locale: String, order: [SiteSettingsScriptsCollectionOrder], preview: Boolean, skip: Int = 0, where: ScriptFilter): SiteSettingsScriptsCollection
  siteName(locale: String): String
  sys: Sys!
}

type SiteSettingsCollection {
  items: [SiteSettings]!
  limit: Int!
  skip: Int!
  total: Int!
}

input SiteSettingsFilter {
  AND: [SiteSettingsFilter]
  OR: [SiteSettingsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  facebookPixelId: String
  facebookPixelId_contains: String
  facebookPixelId_exists: Boolean
  facebookPixelId_in: [String]
  facebookPixelId_not: String
  facebookPixelId_not_contains: String
  facebookPixelId_not_in: [String]
  googleAnalyticsId: String
  googleAnalyticsId_contains: String
  googleAnalyticsId_exists: Boolean
  googleAnalyticsId_in: [String]
  googleAnalyticsId_not: String
  googleAnalyticsId_not_contains: String
  googleAnalyticsId_not_in: [String]
  googleTagManagerId: String
  googleTagManagerId_contains: String
  googleTagManagerId_exists: Boolean
  googleTagManagerId_in: [String]
  googleTagManagerId_not: String
  googleTagManagerId_not_contains: String
  googleTagManagerId_not_in: [String]
  market: cfMarketNestedFilter
  market_exists: Boolean
  scripts: cfScriptNestedFilter
  scriptsCollection_exists: Boolean
  siteName: String
  siteName_contains: String
  siteName_exists: Boolean
  siteName_in: [String]
  siteName_not: String
  siteName_not_contains: String
  siteName_not_in: [String]
  sys: SysFilter
}

type SiteSettingsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum SiteSettingsOrder {
  facebookPixelId_ASC
  facebookPixelId_DESC
  googleAnalyticsId_ASC
  googleAnalyticsId_DESC
  googleTagManagerId_ASC
  googleTagManagerId_DESC
  siteName_ASC
  siteName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type SiteSettingsScriptsCollection {
  items: [Script]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum SiteSettingsScriptsCollectionOrder {
  crossOrigin_ASC
  crossOrigin_DESC
  executionStrategy_ASC
  executionStrategy_DESC
  id_ASC
  id_DESC
  source_ASC
  source_DESC
  strategy_ASC
  strategy_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/83g0mnvupozx/content_types/socialMediaLink)
"""
type SocialMediaLink implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  icon(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): SocialMediaLinkLinkingCollections
  platformName(locale: String): String
  sys: Sys!
  url(locale: String): String
}

type SocialMediaLinkCollection {
  items: [SocialMediaLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

input SocialMediaLinkFilter {
  AND: [SocialMediaLinkFilter]
  OR: [SocialMediaLinkFilter]
  contentfulMetadata: ContentfulMetadataFilter
  icon_exists: Boolean
  platformName: String
  platformName_contains: String
  platformName_exists: Boolean
  platformName_in: [String]
  platformName_not: String
  platformName_not_contains: String
  platformName_not_in: [String]
  sys: SysFilter
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
}

type SocialMediaLinkLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  marketCollection(limit: Int = 100, locale: String, order: [SocialMediaLinkLinkingCollectionsMarketCollectionOrder], preview: Boolean, skip: Int = 0): MarketCollection
}

enum SocialMediaLinkLinkingCollectionsMarketCollectionOrder {
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum SocialMediaLinkOrder {
  platformName_ASC
  platformName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!

  """The locale that was requested."""
  locale: String
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
[See type definition](https://app.contentful.com/spaces/83g0mnvupozx/content_types/urlRedirect)
"""
type UrlRedirect implements Entry & _Node {
  _id: ID!
  active(locale: String): Boolean
  contentfulMetadata: ContentfulMetadata!
  destination(locale: String): String
  endDate(locale: String): DateTime
  linkedFrom(allowedLocales: [String]): UrlRedirectLinkingCollections
  redirectType(locale: String): String
  slug(locale: String): String
  startDate(locale: String): DateTime
  sys: Sys!
}

type UrlRedirectCollection {
  items: [UrlRedirect]!
  limit: Int!
  skip: Int!
  total: Int!
}

input UrlRedirectFilter {
  AND: [UrlRedirectFilter]
  OR: [UrlRedirectFilter]
  active: Boolean
  active_exists: Boolean
  active_not: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  destination: String
  destination_contains: String
  destination_exists: Boolean
  destination_in: [String]
  destination_not: String
  destination_not_contains: String
  destination_not_in: [String]
  endDate: DateTime
  endDate_exists: Boolean
  endDate_gt: DateTime
  endDate_gte: DateTime
  endDate_in: [DateTime]
  endDate_lt: DateTime
  endDate_lte: DateTime
  endDate_not: DateTime
  endDate_not_in: [DateTime]
  redirectType: String
  redirectType_contains: String
  redirectType_exists: Boolean
  redirectType_in: [String]
  redirectType_not: String
  redirectType_not_contains: String
  redirectType_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  startDate: DateTime
  startDate_exists: Boolean
  startDate_gt: DateTime
  startDate_gte: DateTime
  startDate_in: [DateTime]
  startDate_lt: DateTime
  startDate_lte: DateTime
  startDate_not: DateTime
  startDate_not_in: [DateTime]
  sys: SysFilter
}

type UrlRedirectLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum UrlRedirectOrder {
  active_ASC
  active_DESC
  destination_ASC
  destination_DESC
  endDate_ASC
  endDate_DESC
  redirectType_ASC
  redirectType_DESC
  slug_ASC
  slug_DESC
  startDate_ASC
  startDate_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

interface _Node {
  _id: ID!
}

input cfFooterNestedFilter {
  AND: [cfFooterNestedFilter]
  OR: [cfFooterNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfHeaderNestedFilter {
  AND: [cfHeaderNestedFilter]
  OR: [cfHeaderNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  image_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfMarketNestedFilter {
  AND: [cfMarketNestedFilter]
  OR: [cfMarketNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  socialMediaLinksCollection_exists: Boolean
  sys: SysFilter
}

input cfPageNestedFilter {
  AND: [cfPageNestedFilter]
  OR: [cfPageNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  footer_exists: Boolean
  header_exists: Boolean
  market_exists: Boolean
  modulesCollection_exists: Boolean
  pagesCollection_exists: Boolean
  seoMetadata_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfScriptNestedFilter {
  AND: [cfScriptNestedFilter]
  OR: [cfScriptNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  crossOrigin: String
  crossOrigin_contains: String
  crossOrigin_exists: Boolean
  crossOrigin_in: [String]
  crossOrigin_not: String
  crossOrigin_not_contains: String
  crossOrigin_not_in: [String]
  executionStrategy: String
  executionStrategy_contains: String
  executionStrategy_exists: Boolean
  executionStrategy_in: [String]
  executionStrategy_not: String
  executionStrategy_not_contains: String
  executionStrategy_not_in: [String]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  inlineScript: String
  inlineScript_contains: String
  inlineScript_exists: Boolean
  inlineScript_in: [String]
  inlineScript_not: String
  inlineScript_not_contains: String
  inlineScript_not_in: [String]
  source: String
  source_contains: String
  source_exists: Boolean
  source_in: [String]
  source_not: String
  source_not_contains: String
  source_not_in: [String]
  strategy: String
  strategy_contains: String
  strategy_exists: Boolean
  strategy_in: [String]
  strategy_not: String
  strategy_not_contains: String
  strategy_not_in: [String]
  sys: SysFilter
}

input cfSeoMetadataNestedFilter {
  AND: [cfSeoMetadataNestedFilter]
  OR: [cfSeoMetadataNestedFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  featuredImage_exists: Boolean
  noFollow: Boolean
  noFollow_exists: Boolean
  noFollow_not: Boolean
  noIndex: Boolean
  noIndex_exists: Boolean
  noIndex_not: Boolean
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  seoDescription: String
  seoDescription_contains: String
  seoDescription_exists: Boolean
  seoDescription_in: [String]
  seoDescription_not: String
  seoDescription_not_contains: String
  seoDescription_not_in: [String]
  seoTitle: String
  seoTitle_contains: String
  seoTitle_exists: Boolean
  seoTitle_in: [String]
  seoTitle_not: String
  seoTitle_not_contains: String
  seoTitle_not_in: [String]
  sys: SysFilter
}

input cfSocialMediaLinkNestedFilter {
  AND: [cfSocialMediaLinkNestedFilter]
  OR: [cfSocialMediaLinkNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  icon_exists: Boolean
  platformName: String
  platformName_contains: String
  platformName_exists: Boolean
  platformName_in: [String]
  platformName_not: String
  platformName_not_contains: String
  platformName_not_in: [String]
  sys: SysFilter
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
}